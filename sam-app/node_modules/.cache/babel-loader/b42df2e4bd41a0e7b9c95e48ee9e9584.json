{"ast":null,"code":"import utils from 'utils';\nconst validate = utils.validate;\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL;\n/**\n * Retrieves an enrollment for the current year\n * \n * @param {string} studentId \n * \n * @returns {Promise}\n */\n\nexport default function (studentId) {\n  validate.string(studentId);\n  return (async () => {\n    const response = await fetch(\"\".concat(REACT_APP_API_URL, \"/enrollments/\").concat(studentId), {\n      method: 'GET'\n    });\n\n    if (response.status !== 200) {\n      const _ref = await response.json(),\n            error = _ref.error;\n\n      throw new Error(error);\n    } else {\n      return await response.json();\n    }\n  })();\n}","map":{"version":3,"sources":["/Users/jaume/Documents/sam/sam-app/src/logic/retrieve-current-enrollment/index.js"],"names":["utils","validate","REACT_APP_API_URL","process","env","studentId","string","response","fetch","method","status","json","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;MACQC,Q,GAAaD,K,CAAbC,Q;AACR,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;AAEA;;;;;;;;AAQA,eAAe,UAAUG,SAAV,EAAoB;AAC/BJ,EAAAA,QAAQ,CAACK,MAAT,CAAgBD,SAAhB;AAEA,SAAM,CAAC,YAAW;AACd,UAAME,QAAQ,GAAG,MAAMC,KAAK,WAAIN,iBAAJ,0BAAqCG,SAArC,GAAmD;AAC3EI,MAAAA,MAAM,EAAG;AADkE,KAAnD,CAA5B;;AAGA,QAAGF,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA2B;AAAA,mBACL,MAAMH,QAAQ,CAACI,IAAT,EADD;AAAA,YACfC,KADe,QACfA,KADe;;AAEvB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,KAHD,MAII;AACA,aAAO,MAAML,QAAQ,CAACI,IAAT,EAAb;AACH;AACJ,GAXK,GAAN;AAYH","sourcesContent":["import utils from 'utils'\nconst { validate } = utils\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\n\n/**\n * Retrieves an enrollment for the current year\n * \n * @param {string} studentId \n * \n * @returns {Promise}\n */\n\nexport default function (studentId){\n    validate.string(studentId)\n\n    return(async ()=> {\n        const response = await fetch(`${REACT_APP_API_URL}/enrollments/${studentId}` , {\n            method : 'GET'\n        })\n        if(response.status !== 200){\n            const { error } = await response.json()\n            throw new Error(error)\n        }\n        else{\n            return await response.json()\n        }\n    })()\n}\n"]},"metadata":{},"sourceType":"module"}