{"ast":null,"code":"import _slicedToArray from \"/Users/jaume/Documents/sam/sam-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jaume/Documents/sam/sam-app/src/components/App/index.js\";\nimport React, { useState } from 'react';\nimport { HashRouter as Router, withRouter, Redirect, Route } from 'react-router-dom';\nimport MyContext from '../ProviderContext';\nimport logic from '../../logic';\nimport Landing from '../Landing';\nimport Home from '../Home';\nimport Header from '../Header';\nimport Login from '../Login';\nimport RegisterTutor from '../RegisterTutor';\nimport RegisterStudent from '../RegisterStudent';\nimport RegisterSuccess from '../RegisterSuccess';\nimport UpdateSuccess from '../UpdateSuccess';\nimport ProcessSuccess from \"../ProcessSuccess\";\nimport UpdateStudent from '../StudentUpdate';\nimport RegisterEnrollment from \"../RegisterEnrollment\";\nimport CheckEnrollment from \"../CheckEnrollment\";\nimport './index.sass';\nimport '../../styles/normalize.sass';\n\nfunction App() {\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        tutor = _useState2[0],\n        setTutor = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        studentId = _useState4[0],\n        setStudentId = _useState4[1];\n\n  return React.createElement(MyContext.Provider, {\n    value: {\n      tutor,\n      setTutor,\n      studentId,\n      setStudentId\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: \"main-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => !logic.isUserLoggedIn() ? React.createElement(Landing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    render: () => !logic.isUserLoggedIn() ? React.createElement(RegisterTutor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register-student\",\n    render: () => logic.isUserLoggedIn() ? React.createElement(RegisterStudent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    render: () => !logic.isUserLoggedIn() ? React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register-success\",\n    render: () => !logic.isUserLoggedIn() ? React.createElement(RegisterSuccess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/process-success\",\n    render: () => logic.isUserLoggedIn() ? React.createElement(ProcessSuccess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/update-success\",\n    render: () => logic.isUserLoggedIn() ? React.createElement(UpdateSuccess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/home\",\n    render: () => logic.isUserLoggedIn() ? React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/student-update\",\n    render: () => logic.isUserLoggedIn() ? React.createElement(UpdateStudent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register-enrollment\",\n    render: () => logic.isUserLoggedIn() ? React.createElement(RegisterEnrollment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/check-enrollment\",\n    render: () => logic.isUserLoggedIn() ? React.createElement(CheckEnrollment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/jaume/Documents/sam/sam-app/src/components/App/index.js"],"names":["React","useState","HashRouter","Router","withRouter","Redirect","Route","MyContext","logic","Landing","Home","Header","Login","RegisterTutor","RegisterStudent","RegisterSuccess","UpdateSuccess","ProcessSuccess","UpdateStudent","RegisterEnrollment","CheckEnrollment","App","undefined","tutor","setTutor","studentId","setStudentId","isUserLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { HashRouter as Router , withRouter , Redirect , Route } from 'react-router-dom'\nimport MyContext from '../ProviderContext';\n\nimport logic from '../../logic'\n\nimport Landing from '../Landing'\nimport Home from '../Home'\nimport Header from '../Header'\nimport Login from '../Login'\nimport RegisterTutor from '../RegisterTutor'\nimport RegisterStudent from '../RegisterStudent'\nimport RegisterSuccess from '../RegisterSuccess'\nimport UpdateSuccess from '../UpdateSuccess'\nimport ProcessSuccess from \"../ProcessSuccess\"\nimport UpdateStudent from '../StudentUpdate'\nimport RegisterEnrollment from \"../RegisterEnrollment\"\nimport CheckEnrollment from \"../CheckEnrollment\"\n\nimport './index.sass'\nimport '../../styles/normalize.sass'\n\nfunction App() {\n  const [tutor , setTutor] = useState(undefined)\n  const [studentId , setStudentId] = useState(undefined)\n\n  return  <MyContext.Provider value={{ tutor , setTutor , studentId , setStudentId }}>  \n            <div className=\"App\">\n                <Header/>\n                <main className=\"main-wrapper\">\n                  <Router>\n                    <Route exact path=\"/\" render={ () => !logic.isUserLoggedIn() ? <Landing /> : <Redirect to=\"/home\"/> } />\n                    <Route path=\"/register\" render={ () => !logic.isUserLoggedIn() ? <RegisterTutor /> : <Redirect to=\"/home\"/> }/>\n                    <Route path=\"/register-student\" render={ () => logic.isUserLoggedIn() ? <RegisterStudent /> : <Redirect to=\"/login\"/> }/>\n                    <Route path=\"/login\" render={ () => !logic.isUserLoggedIn() ? <Login /> : <Redirect to=\"/home\"/> } />\n                    <Route path=\"/register-success\" render={ () => !logic.isUserLoggedIn() ? <RegisterSuccess /> : <Redirect to=\"/home\"/> } />\n                    <Route path=\"/process-success\" render={ () => logic.isUserLoggedIn() ? <ProcessSuccess /> : <Redirect to=\"/home\"/> } />\n                    <Route path=\"/update-success\" render={ () => logic.isUserLoggedIn() ? <UpdateSuccess /> : <Redirect to=\"/login\"/> } />\n                    <Route path=\"/home\" render={ () => logic.isUserLoggedIn() ? <Home /> : <Redirect to=\"/\"/> } />\n                    <Route path=\"/student-update\" render={ () => logic.isUserLoggedIn() ? <UpdateStudent /> : <Redirect to=\"/\"/> } />\n                    <Route path=\"/register-enrollment\" render={ () => logic.isUserLoggedIn() ? <RegisterEnrollment /> : <Redirect to=\"/\"/> } />\n                    <Route path=\"/check-enrollment\" render={ () => logic.isUserLoggedIn() ? <CheckEnrollment /> : <Redirect to=\"/\"/> } />\n                </Router>\n              </main>\n            </div>\n          </MyContext.Provider>\n          }\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}