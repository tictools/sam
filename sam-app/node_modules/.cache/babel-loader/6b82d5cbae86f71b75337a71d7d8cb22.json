{"ast":null,"code":"import utils from 'utils';\nconst validate = utils.validate;\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL;\n/**\n * Register a student\n * \n * @param {string} name \n * @param {string} surname \n * @param {string} dni \n * @param {string} phone1 \n * @param {string} email \n * @param {string} password \n * @param {string} repassword \n * \n * @returns {Promise}\n */\n\nexport default function (name, surname, birthdate, healthcard) {\n  validate.string(name, 'name');\n  validate.alphabetic(name, 'name');\n  validate.string(surname, 'surname');\n  validate.alphabetic(surname, 'surname');\n  validate.date(birthdate, 'birthdate');\n  validate.string(healthcard, 'healthcard');\n  return (async () => {\n    const response = await fetch(\"\".concat(REACT_APP_API_URL, \"/students\"), {\n      method: 'POST',\n      headers: {\n        'authorization': \"bearer \".concat(this.__token__),\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        surname,\n        birthdate,\n        healthcard\n      })\n    });\n\n    if (response.status !== 200) {\n      const _ref = await response.json(),\n            error = _ref.error;\n\n      throw Error(error);\n    } else {\n      return await response.json();\n    }\n  })();\n}","map":{"version":3,"sources":["/Users/jaume/Documents/sam/sam-app/src/logic/register-student/index.js"],"names":["utils","validate","REACT_APP_API_URL","process","env","name","surname","birthdate","healthcard","string","alphabetic","date","response","fetch","method","headers","__token__","body","JSON","stringify","status","json","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;MAEQC,Q,GAAaD,K,CAAbC,Q;AAER,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;AAEA;;;;;;;;;;;;;;AAcA,eAAe,UAAUG,IAAV,EAAiBC,OAAjB,EAA2BC,SAA3B,EAAuCC,UAAvC,EAAmD;AAE9DP,EAAAA,QAAQ,CAACQ,MAAT,CAAgBJ,IAAhB,EAAsB,MAAtB;AACAJ,EAAAA,QAAQ,CAACS,UAAT,CAAoBL,IAApB,EAA2B,MAA3B;AACAJ,EAAAA,QAAQ,CAACQ,MAAT,CAAgBH,OAAhB,EAAyB,SAAzB;AACAL,EAAAA,QAAQ,CAACS,UAAT,CAAoBJ,OAApB,EAA8B,SAA9B;AACAL,EAAAA,QAAQ,CAACU,IAAT,CAAcJ,SAAd,EAAyB,WAAzB;AACAN,EAAAA,QAAQ,CAACQ,MAAT,CAAgBD,UAAhB,EAA4B,YAA5B;AAEA,SAAO,CAAC,YAAY;AAChB,UAAMI,QAAQ,GAAG,MAAMC,KAAK,WAAIX,iBAAJ,gBAAkC;AAC1DY,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AAAC,0CAA4B,KAAKC,SAAjC,CAAD;AAAgD,wBAAgB;AAAhE,OAFiD;AAG1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,QAAAA,IAAF;AAASC,QAAAA,OAAT;AAAmBC,QAAAA,SAAnB;AAA+BC,QAAAA;AAA/B,OAAf;AAHoD,KAAlC,CAA5B;;AAKA,QAAII,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AAAA,mBACP,MAAMR,QAAQ,CAACS,IAAT,EADC;AAAA,YACjBC,KADiB,QACjBA,KADiB;;AAEzB,YAAMC,KAAK,CAACD,KAAD,CAAX;AACH,KAHD,MAGM;AACF,aAAO,MAAMV,QAAQ,CAACS,IAAT,EAAb;AACH;AACJ,GAZM,GAAP;AAaH","sourcesContent":["import utils from 'utils'\n\nconst { validate } = utils\n\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\n\n/**\n * Register a student\n * \n * @param {string} name \n * @param {string} surname \n * @param {string} dni \n * @param {string} phone1 \n * @param {string} email \n * @param {string} password \n * @param {string} repassword \n * \n * @returns {Promise}\n */\n\nexport default function (name , surname , birthdate , healthcard) {\n    \n    validate.string(name, 'name')\n    validate.alphabetic(name , 'name')\n    validate.string(surname, 'surname')\n    validate.alphabetic(surname , 'surname')\n    validate.date(birthdate, 'birthdate')\n    validate.string(healthcard, 'healthcard')\n    \n    return (async () => {\n        const response = await fetch(`${REACT_APP_API_URL}/students`, {\n            method: 'POST',\n            headers: {'authorization' : `bearer ${this.__token__}` , 'content-type': 'application/json'},\n            body: JSON.stringify({ name , surname , birthdate , healthcard })\n        })\n        if (response.status !== 200) {\n            const { error } = await response.json()\n            throw Error(error)\n        }else {\n            return await response.json()\n        }   \n    })()\n}"]},"metadata":{},"sourceType":"module"}