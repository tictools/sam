{"ast":null,"code":"import utils from 'utils';\nconst validate = utils.validate;\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL;\n/**\n * Updates a student\n * \n * @param {string} name \n * @param {string} surname \n * @param {string} birthdate \n * @param {string} healthcard \n * \n * @returns {Promise}\n */\n\nexport default function (id, name, surname, birthdate, healthcard) {\n  validate.string(id, 'id');\n  validate.string(name, 'name');\n  validate.string(surname, 'surname');\n  validate.date(birthdate, 'birthdate');\n  validate.string(healthcard, 'healthcard');\n  const data = {\n    name,\n    surname,\n    birthdate,\n    healthcard\n  };\n  return (async () => {\n    const response = await fetch(\"\".concat(REACT_APP_API_URL, \"/students/\").concat(id), {\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (response.status !== 200) {\n      const _ref = await response.json(),\n            error = _ref.error;\n\n      throw new Error(error);\n    } else {\n      return await response.json();\n    }\n  })();\n}","map":{"version":3,"sources":["/Users/jaume/Documents/sam/sam-app/src/logic/update-student/index.js"],"names":["utils","validate","REACT_APP_API_URL","process","env","id","name","surname","birthdate","healthcard","string","date","data","response","fetch","method","headers","body","JSON","stringify","status","json","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;MAEQC,Q,GAAaD,K,CAAbC,Q;AAER,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;AAEA;;;;;;;;;;;AAWA,eAAe,UAASG,EAAT,EAAcC,IAAd,EAAqBC,OAArB,EAA+BC,SAA/B,EAA2CC,UAA3C,EAAsD;AAEjER,EAAAA,QAAQ,CAACS,MAAT,CAAgBL,EAAhB,EAAoB,IAApB;AACAJ,EAAAA,QAAQ,CAACS,MAAT,CAAgBJ,IAAhB,EAAsB,MAAtB;AACAL,EAAAA,QAAQ,CAACS,MAAT,CAAgBH,OAAhB,EAAyB,SAAzB;AACAN,EAAAA,QAAQ,CAACU,IAAT,CAAcH,SAAd,EAA0B,WAA1B;AACAP,EAAAA,QAAQ,CAACS,MAAT,CAAgBD,UAAhB,EAA4B,YAA5B;AAEA,QAAMG,IAAI,GAAG;AAACN,IAAAA,IAAD;AAAQC,IAAAA,OAAR;AAAkBC,IAAAA,SAAlB;AAA8BC,IAAAA;AAA9B,GAAb;AAEA,SAAM,CAAC,YAAW;AACd,UAAMI,QAAQ,GAAG,MAAMC,KAAK,WAAIZ,iBAAJ,uBAAkCG,EAAlC,GAAyC;AACjEU,MAAAA,MAAM,EAAE,OADyD;AAEjEC,MAAAA,OAAO,EAAE;AAAE,wBAAiB;AAAnB,OAFwD;AAGjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAH2D,KAAzC,CAA5B;;AAKA,QAAGC,QAAQ,CAACO,MAAT,KAAoB,GAAvB,EAA2B;AAAA,mBACL,MAAMP,QAAQ,CAACQ,IAAT,EADD;AAAA,YACfC,KADe,QACfA,KADe;;AAEvB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,KAHD,MAGK;AACD,aAAO,MAAMT,QAAQ,CAACQ,IAAT,EAAb;AACH;AACJ,GAZK,GAAN;AAaH","sourcesContent":["import utils from 'utils'\n\nconst { validate } = utils\n\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\n\n/**\n * Updates a student\n * \n * @param {string} name \n * @param {string} surname \n * @param {string} birthdate \n * @param {string} healthcard \n * \n * @returns {Promise}\n */\n\nexport default function(id , name , surname , birthdate , healthcard){\n\n    validate.string(id, 'id')\n    validate.string(name, 'name')\n    validate.string(surname, 'surname')\n    validate.date(birthdate , 'birthdate')\n    validate.string(healthcard, 'healthcard')\n\n    const data = {name , surname , birthdate , healthcard}\n\n    return(async () =>{\n        const response = await fetch(`${REACT_APP_API_URL}/students/${id}` , {\n            method: 'PATCH',\n            headers: { 'content-type' : 'application/json' },\n            body: JSON.stringify(data)\n        })\n        if(response.status !== 200){\n            const { error } = await response.json()\n            throw new Error(error)\n        }else{\n            return await response.json()\n        }\n    })()\n}"]},"metadata":{},"sourceType":"module"}